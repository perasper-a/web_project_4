!function(){"use strict";class e{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}))}}const t=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_checkRes(e){return e.ok?e.json():Promise.reject(e.status)}getUserInfo(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then(this._checkRes)}getCards(){return fetch(this._baseUrl+"/cards",{headers:this._headers}).then(this._checkRes)}editProfile(e){let{name:t,about:s}=e;return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this._checkRes)}addCard(e){let{name:t,link:s}=e;return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._checkRes)}addLike(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then(this._checkRes)}removeLike(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then(this._checkRes)}editAvatar(e){return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkRes)}deleteCard(e){return fetch(this._baseUrl+"/cards/"+e,{method:"DELETE",headers:this._headers}).then(this._checkRes)}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"bccf616c-d32a-4841-af70-282e4f295a5b","content-type":"application/json"}});var s=class{constructor(e,t,s){this.settings=e,this.formElement=t,this._inputList=s,this._buttonEl=this.formElement.querySelector(this.settings.submitButtonSelector)}resetFormErrors(){this._inputList.forEach((e=>{this._hideInputError(e)}))}_hasValidInputs=()=>this._inputList.every((e=>!0===e.validity.valid));_enableButton(e){e.classList.remove(this.settings.inactiveButtonClass),e.disabled=!1}disableButton(e){e.classList.add(this.settings.inactiveButtonClass),e.disabled=!0}_toggleButton=()=>{this._hasValidInputs()?this._enableButton(this._buttonEl):this.disableButton(this._buttonEl)};_showInputError=e=>{const{inputErrorClass:t}=this.settings;this.formElement.querySelector(`#${e.id}-error`).textContent=e.validationMessage,e.classList.add(t)};_hideInputError=e=>{const{inputErrorClass:t}=this.settings;this.formElement.querySelector(`#${e.id}-error`).textContent="",e.classList.remove(t)};_checkInputValidity=e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)};_setEventListener=()=>{const{inputSelector:e}=this.settings;this._inputList=[...this.formElement.querySelectorAll(e)],this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))};enableValidation(){this.formElement.addEventListener("submit",(e=>e.preventDefault())),this._setEventListener(this.formElement,this.settings)}};class r{constructor(e,t,s,r,n,i){this._data=e,this._cardTemplateSelector=s,this._handleImageClick=r,this._likes=e.likes,this._id=e._id,this._handleLikeButton=n,this._userId=t,this._handleDeleteClick=i,this._ownerId=e.owner._id}getId(){return this._id}_getTemplate(){return document.querySelector(this._cardTemplateSelector).content.querySelector(".card")}removeCard=()=>{this._cardElement.remove(),this._cardElement=null};isLiked(){return this._likes.some((e=>e._id===this._userId))}renderLikes(e){this._likes=e,this.isLiked()?this._cardLikeButton.classList.add("card__like-button_filled"):this._cardLikeButton.classList.remove("card__like-button_filled")}createCard=()=>{this._cardElement=this._getTemplate().cloneNode(!0),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardDeleteButton=this._cardElement.querySelector(".card__trash-button"),this._cardLikeButton=this._cardElement.querySelector(".card__like-button");const e=this._likes.length;return this._cardElement.querySelector(".card__likes-count").textContent=e,this._cardImage.style.backgroundImage=`url(${this._data.link})`,this._cardElement.querySelector(".card__title").textContent=this._data.name,this._addEventListeners(),this.renderLikes(this._likes),this._userId!==this._ownerId&&(this._cardElement.querySelector(".card__trash-button").style.display="none"),this._cardElement};_addEventListeners=()=>{this._cardImage.addEventListener("click",(()=>this._handleImageClick())),this._cardDeleteButton.addEventListener("click",(()=>this._handleDeleteClick(this))),this._cardLikeButton.addEventListener("click",this._handleLikeButton)}}class n extends e{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._submitButton=this._popup.querySelector(".form__button")}_getInputValues(){const e={};return[...this._form.querySelectorAll(".form__input")].forEach((t=>{const s=t.name,r=t.value;e[s]=r})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues())}))}changeHandleSubmit(e){this._handleSubmit=e}changeText(e){this._submitButton.textContent=e}close(){super.close(),this._form.reset()}}const i=document.querySelector(".profile__name-button"),o=document.querySelector(".profile__button-add"),a=document.querySelector(".cards__list"),l=document.querySelector(".popup__form_profile"),c=document.querySelector(".popup__form_card"),h=document.querySelector(".form__input_type_name"),d=document.querySelector(".form__input_type_job"),_=document.querySelector(".profile__image"),u=document.querySelector(".popup_type_avatar-change"),p={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type-error",errorClass:"form__input-error"};let m;Promise.all([t.getUserInfo(),t.getCards()]).then((e=>{let[t,s]=e;m=t._id,k.setUserInfo(t.name,t.about),k.setAvatar(t.avatar),L.renderItems(s)})).catch(console.log);const f=new n(".popup_type_add-card",(e=>{f.changeText("saving..."),t.addCard({name:e.title,link:e.link}).then((e=>{y(e,a),f.close()})).catch(console.log).finally((()=>{f.changeText("save")}))})),b=new n(".popup_type_profile",(e=>{b.changeText("saving..."),t.editProfile({name:e.name,about:e.job}).then((e=>{k.setUserInfo(e.name,e.about),b.close()})).catch(console.log).finally((()=>{b.changeText("save")}))})),E=new class extends e{constructor(e,t){super(e),this._image=document.querySelector(".popup__image"),this._caption=document.querySelector(".popup__image-caption")}open(e,t){this._image.src=t,this._image.alt="image view",this._caption.textContent=e,super.open()}}(".popup_type_preview"),v=new n(".popup_type_avatar-change",(e=>{t.editAvatar(e.link).then((e=>{k.setUserInfo(e.name,e.about,e.avatar),v.close()})).catch(console.log)})),g=new class extends e{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._submitButton=this._popup.querySelector(".form__button")}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()}))}changeHandleSubmit(e){this._handleSubmit=e}changeText(e){this._submitButton.textContent=e}close(){super.close(),this._form.reset()}}(".popup_type_confirm-delete"),k=new class{constructor(e){let{profileNameSelector:t,profileJobSelector:s,userAvatarSelector:r}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s),this._avatarEl=document.querySelector(r)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e,t){this._profileName.textContent=e,this._profileJob.textContent=t}setAvatar(e){this._avatarEl.src=e}}({profileNameSelector:".profile__name-info",profileJobSelector:".profile__info-job",userAvatarSelector:".profile__image"}),y=e=>{const s=new r(e,m,"#card-template",(()=>{E.open(e.name,e.link)}),(()=>(e=>{e.isLiked()?t.removeLike(e.getId()).then((t=>{e.renderLikes(t.likes)})).catch(console.log):t.addLike(e.getId()).then((t=>{e.renderLikes(t.likes)}))})(s)),(()=>(e=>{g.open(),g.changeHandleSubmit((()=>{g.changeText("loading..."),t.deleteCard(e.getId()).then((()=>{e.removeCard(),g.close()})).finally((()=>{g.changeText("yes")}))}))})(s))),n=s.createCard();L.addItem(n)},L=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({renderer:y},".cards__list"),S=new s(p,l),C=new s(p,c),I=new s(p,u);S.enableValidation(),C.enableValidation(),I.enableValidation(),v.setEventListeners(),E.setEventListeners(),g.setEventListeners(),b.setEventListeners(),f.setEventListeners(),i.addEventListener("click",(function(){const e=k.getUserInfo();b.open(),h.value=e.name,d.value=e.job,S.resetFormErrors()})),o.addEventListener("click",(function(){f.open(),C.resetFormErrors(c,p)})),_.addEventListener("click",(()=>{v.open(),I.resetFormErrors()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,